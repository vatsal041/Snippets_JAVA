{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"": {
		"prefix": ["inversemod"],
		"body": [
		  "static int inverse(long x) {",
		  "    long res = 1;",
		  "    long mod = (long)1e9 + 7;",
		  "    long k = mod - 2;",
		  "    while (k != 0) {",
		  "        if (k % 2 == 1) {",
		  "            res = (res * x) % mod;",
		  "        }",
		  "        x = (x * x) % mod;",
		  "        k /= 2;",
		  "    }",
		  "    return (int) (res % mod);",
		  "}"
		],
		"description": ""
	  }
}
